version: '3.8'

services:
  config-server:
    build: ./config-server
    ports:
      - "8071"
    networks:
      backend:
        aliases:
          - "config-server"
  discovery-service:
    build: ./discovery-service
    ports:
      - "8070"
    networks:
      backend:
        aliases:
          - "discovery-service"
  gateway:
    build: ./gateway
    ports:
      - "8072:8072"
    networks:
      backend:
        aliases:
          - "gateway"
  ui:
    build: ./ui
    ports:
      - "8000:8080"
    networks:
      backend:
        aliases:
          - "ui"
    depends_on:
      keycloak:
        condition: service_healthy
  postgres:
    image: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: password
    networks:
      backend:
        aliases:
          - "postgres"
  keycloak:
    #image: quay.io/keycloak/keycloak:19.0.3
    #command: ["start-dev", "--log-level=debug"]
    build: ./keycloak
    #command: ["start-dev", "--auto-build"]
    environment:
      #KEYCLOAK_FRONTEND_URL: http://localhost:8079
      # WORKS # KEYCLOAK_FRONTEND_URL: http://keycloak:8080/auth
      # KEYCLOAK_HOSTNAME: keycloak
      #PROXY_ADDRESS_FORWARDING: true
      #KC_HOSTNAME_STRICT_BACKCHANNEL: "true"
      #KEYCLOAK_AUTH_URL: http://keycloak:8080/auth
      #KEYCLOAK_AUTH_URL: http://localhost:8079/auth
      #DB_VENDOR: POSTGRES
      #DB_ADDR: postgres
      #DB_DATABASE: keycloak
      #DB_USER: keycloak
      #DB_SCHEMA: public
      #DB_PASSWORD: password
      
      KC_DB: postgres
      KC_DB_URL: postgres
      KC_DB_URL_HOST: postgres
      KC_DB_URL_DATABASE: keycloak
      KC_DB_USERNAME: keycloak
      KC_DB_SCHEMA: public
      KC_DB_PASSWORD: password
      #KC_HOSTNAME: localhost
      #KC_HOSTNAME_PORT: 8080
      KC_HTTP_PORT: 8079
      #KEYCLOAK_USER: admin
      #KEYCLOAK_PASSWORD: Pa55w0rd
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: Pa55w0rd
      # Uncomment the line below if you want to specify JDBC parameters. The parameter below is just an example, and it shouldn't be used in production without knowledge. It is highly recommended that you read the PostgreSQL JDBC driver documentation in order to use it.
      #JDBC_PARAMS: "ssl=true"
    ports:
      - "8079:8079"
    depends_on:
      - postgres
    networks:
      backend:
        aliases:
          - "keycloak"
    healthcheck:
      test: "/bin/sh -c 'curl -f http://localhost:8079/realms/Test_realm || exit 1'"
      interval: 20s
      retries: 5
      start_period: 80s
      timeout: 5s
          
networks:
  backend:
    name: custom_backend
    driver: bridge
    
volumes:
  postgres_data:
    driver: local

#######################
### USEFUL COMMANDS ###
#######################
#  docker-compose up -d --build
#  docker-compose start
#  docker-compose down --remove-orphans

#  connect to all logs
#  docker-compose logs -f -t
